CFLAGS = $(CFLAGS) /MT /O2 /Gy /EHsc /D_CRT_SECURE_NO_DEPRECATE=1 /D_CRT_NONSTDC_NO_DEPRECATE=1
#CFLAGS = $(CFLAGS) /MT /Od /LD /Zi /Gy /EHsc /D_CRT_SECURE_NO_DEPRECATE=1 /D_CRT_NONSTDC_NO_DEPRECATE=1
CFLAGS = $(CFLAGS) /Isrc /I../src /nologo /DWIN32_LEAN_AND_MEAN
WINLIBS = ws2_32.lib advapi32.lib libcmt.lib gdi32.lib user32.lib #mswsock.lib

HDRS =	src/list.h src/skiplist.h src/uncle.h \
		src/network.h src/thread.h src/uuid.h src/jsonq.h \
		src/bifs.h src/internal.h src/xmlq.h

OBJECTS_ISO = src/trealla.obj src/history.obj src/jela.obj \
		src/list.obj src/print.obj src/skiplist.obj src/daemon.obj \
		src/bifs_iso.obj

OBJECTS_ALL = $(OBJECTS_ISO) src/base64.obj src/skipbuck.obj \
			src/thread.obj src/uncle.obj src/uuid.obj src/xmlq.obj \
			src/jsonq.obj src/network.obj  src/bifs_dbs.obj \
			src/bifs_net.obj src/bifs_proc.obj \
			src/bifs_sys.obj src/bifs_http.obj

!ifndef USE_SSL
USE_SSL = 1
!endif

!ifdef ISO_ONLY
OBJECTS = $(OBJECTS_ISO)
CFLAGS = $(CFLAGS) /DISO_ONLY
!else
OBJECTS = $(OBJECTS_ALL)
!endif

!if $(USE_SSL)
!if $(USE_SSL64)
SSLDIR = c:\openssl-win64
!else
SSLDIR = c:\openssl-win32
!endif
CFLAGS = $(CFLAGS) /I$(SSLDIR)\include
OBJECTS = $(OBJECTS) $(SSLDIR)\lib\libcrypto.lib $(SSLDIR)\lib\libssl.lib
!endif

CFLAGS = $(CFLAGS) /DUSE_SSL=$(USE_SSL)

all: tpl.exe

tpl.exe: $*.obj $(OBJECTS)
        link @<<
-out:$*.exe
$*.obj $(OBJECTS)
$(WINLIBS)
<<

tpl.obj: $*.c src/trealla.h src/history.h src/http_client.h \
			src/smtp_client.h src/dict.h \
			src/auth.h src/blog.h
        cl $(CFLAGS) /c /Tp $*.c /Fo$*.obj

src/trealla.obj: $*.c $*.h src/internal.h src/bifs.h src/list.h src/skiplist.h src/uncle.h \
			src/network.h src/thread.h src/uuid.h src/jsonq.h src/xmlq.h
        cl $(CFLAGS) /c /Tp $*.c /Fo$*.obj

src/print.obj: $*.c src/internal.h src/bifs.h src/list.h src/base64.h
        cl $(CFLAGS) /c /Tp $*.c /Fo$*.obj

src/jela.obj: $*.c $*.h src/internal.h src/bifs.h src/list.h src/skiplist.h
        cl $(CFLAGS) /c /Tp $*.c /Fo$*.obj

src/list.obj: $*.c $*.h
        cl $(CFLAGS) /c /Tp $*.c /Fo$*.obj

src/history.obj: $*.c $*.h
        cl $(CFLAGS) /c /Tp $*.c /Fo$*.obj

src/skiplist.obj: $*.c $*.h
        cl $(CFLAGS) /c /Tp $*.c /Fo$*.obj

src/daemon.obj: $*.c $*.h
        cl $(CFLAGS) /c /Tp $*.c /Fo$*.obj

src/base64.obj: $*.c $*.h
        cl $(CFLAGS) /c /Tp $*.c /Fo$*.obj

src/jsonq.obj: $*.c $*.h
        cl $(CFLAGS) /c /Tp $*.c /Fo$*.obj

src/network.obj: $*.c $*.h src/thread.h src/skiplist.h src/uncle.h
        cl $(CFLAGS) /c /Tp $*.c /Fo$*.obj

src/skipbuck.obj: $*.c $*.h
        cl $(CFLAGS) /c /Tp $*.c /Fo$*.obj

src/thread.obj: $*.c $*.h src/list.h
        cl $(CFLAGS) /c /Tp $*.c /Fo$*.obj

src/uncle.obj: $*.c $*.h src/thread.h src/jsonq.h src/skipbuck.h
        cl $(CFLAGS) /c /Tp $*.c /Fo$*.obj

src/uuid.obj: $*.c $*.h
        cl $(CFLAGS) /c /Tp $*.c /Fo$*.obj

src/xmlq.obj: $*.c $*.h
        cl $(CFLAGS) /c /Tp $*.c /Fo$*.obj

src/bifs_dbs.obj: $*.c src/bifs.h src/internal.h src/list.h src/skiplist.h src/trealla.h src/jela.h src/network.h
        cl $(CFLAGS) /c /Tp $*.c /Fo$*.obj

src/bifs_net.obj: $*.c src/bifs.h src/internal.h src/list.h src/skiplist.h src/trealla.h src/jela.h src/network.h
        cl $(CFLAGS) /c /Tp $*.c /Fo$*.obj

src/bifs_iso.obj: $*.c src/bifs.h src/internal.h src/list.h src/skiplist.h src/trealla.h src/jela.h src/network.h
        cl $(CFLAGS) /c /Tp $*.c /Fo$*.obj

src/bifs_proc.obj: $*.c src/bifs.h src/internal.h src/list.h src/skiplist.h src/trealla.h src/jela.h src/network.h
        cl $(CFLAGS) /c /Tp $*.c /Fo$*.obj

src/bifs_http.obj: $*.c src/bifs.h src/internal.h src/list.h src/skiplist.h src/trealla.h src/jela.h src/network.h
        cl $(CFLAGS) /c /Tp $*.c /Fo$*.obj

src/bifs_sys.obj: $*.c src/bifs.h src/internal.h src/list.h src/skiplist.h src/trealla.h src/jela.h src/network.h
        cl $(CFLAGS) /c /Tp $*.c /Fo$*.obj

clean:
    -erase src/*.obj *.obj *.exe *.res *.map *.rws *.pdb
